import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  value: [],
  status: "idle",
};

export const counterSlice = createSlice({
  name: "notes",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    add: (state, action) => {
      state.value = [state.value, ...action.payload];
    },
    delete: (state, action) => {
      // state.value = state.value.filter((note)=>{ return note!==action.payload})
    },
    edit: () => {},
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  //     extraReducers: (builder) => {
  //       builder
  //         .addCase(incrementAsync.pending, (state) => {
  //           state.status = 'loading';
  //         })
  //         .addCase(incrementAsync.fulfilled, (state, action) => {
  //           state.status = 'idle';
  //           state.value += action.payload;
  //         });
  // },
});
export const { add, edit } = noteSlice.actions;

export const selectNote = (state) => state.counter.value;

export default noteSlice.reducer;
